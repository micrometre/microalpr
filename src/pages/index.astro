---
// Import section components
import MainLayout from "@/layouts/MainLayout.astro";
import { Image } from "astro:assets";
import ImgMain from "../images/Registration_Plate.svg";
import HeroSection from "@/components/Hero.astro"
// Global declaration for gsap animation library
declare global {
  interface Window {
    gsap: any;
  }
}
---

<MainLayout>
  <div id="overlay" class="fixed inset-0 bg-neutral-200 dark:bg-neutral-800">
  </div>
  <section
    class="mx-auto flex max-w-[85rem] flex-col px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
  >
    <div
      class="flex flex-col items-center justify-between space-y-2 sm:flex-row sm:space-y-0"
    >
      <div id="fadeInUp">
        <h1
          class="block text-balance text-3xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-6xl lg:text-6xl lg:leading-tight"
        >
          Automatic Number Plate Recognition (ANPR)
          <span class="text-teal-500 dark:text-teal-400">
            as a service 
          </span>
        </h1>
      </div>
      <div>
        <Image
          id="fadeInMoveRight"
          src={ImgMain}
          class="w-[1299px]"
          alt="test"
          format={"avif"}
          loading={"eager"}
        />
      </div>
    </div>
  <HeroSection />

</MainLayout>
  </section>

<script is:inline src="/scripts/vendor/gsap/gsap.min.js"></script>
<script>
  window.addEventListener("load", () => {
    if (window.gsap) {
      const gsap = window.gsap;
      gsap.set("#fadeText", {
        autoAlpha: 0,
        y: 50,
        willChange: "transform, opacity",
      });
      gsap.set("#fadeInUp", {
        autoAlpha: 0,
        y: 50,
        willChange: "transform, opacity",
      });
      gsap.set("#fadeInMoveRight", {
        autoAlpha: 0,
        x: 300,
        willChange: "transform, opacity",
      });

      let timeline = gsap.timeline({ defaults: { overwrite: "auto" } });

      timeline.to("#fadeText", {
        duration: 1.5,
        autoAlpha: 1,
        y: 0,
        delay: 1,
        ease: "power2.out",
      });

      timeline.to(
        "#fadeInUp",
        { duration: 1.5, autoAlpha: 1, y: 0, ease: "power2.out" },
        "-=1.2",
      );

      timeline.to(
        "#fadeInMoveRight",
        { duration: 1.5, autoAlpha: 1, x: 0, ease: "power2.inOut" },
        "-=1.4",
      );

      timeline.to("#overlay", { duration: 1, autoAlpha: 0, delay: 0.2 });
    }
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    function setButtonInactive(btn: any, activeButton: any) {
      if (btn !== activeButton) {
        btn.classList.remove(
          "active",
          "bg-neutral-100",
          "hover:border-transparent",
          "dark:bg-white/[.05]",
        );

        const tabId = btn.getAttribute("data-target");
        if (tabId) {
          const contentElement = document.querySelector(tabId);
          if (contentElement) {
            contentElement.classList.add("hidden");
          }
        }

        changeHeadingStyle(
          btn,
          ["text-neutral-800", "dark:text-neutral-200"],
          ["text-[#fa5a15]", "dark:text-[#fb713b]"],
        );
      }
    }

    function activateButton(button: any) {
      button.classList.add(
        "active",
        "bg-neutral-100",
        ",hover:border-transparent",
        "dark:bg-white/[.05]",
      );

      const tabId = button.getAttribute("data-target");
      if (tabId) {
        const contentElementToShow = document.querySelector(tabId);
        if (contentElementToShow) {
          contentElementToShow.classList.remove("hidden");
        }
      }

      changeHeadingStyle(
        button,
        ["text-[#fa5a15]", "dark:text-[#fb713b]"],
        ["text-neutral-800", "dark:text-neutral-200"],
      );
    }

    function changeHeadingStyle(
      button: any,
      addClasses: any,
      removeClasses: any,
    ) {
      let heading = button.querySelector("span");
      if (heading) {
        heading.classList.remove(...removeClasses);
        heading.classList.add(...addClasses);
      }
    }

    const tabButtons = document.querySelectorAll("[data-target]");

    if (tabButtons.length > 0) {
      changeHeadingStyle(
        tabButtons[0],
        ["text-[#fa5a15]", "dark:text-[#fb713b]"],
        [],
      );
    }

    tabButtons.forEach((button) => {
      button.addEventListener("click", () => {
        tabButtons.forEach((btn) => setButtonInactive(btn, button));
        activateButton(button);
      });
    });
  });
</script>
